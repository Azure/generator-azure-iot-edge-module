trigger:
  branches:
    include:
    - refs/tags/v*
    
jobs:
- job: Build
  pool:
    name: Azure-IoT-EdgeExperience-1ES-Hosted-Linux
    demands:
      - ImageOverride -equals MMSUbuntu18.04TLS

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
        checkLatest: true

    - script: |
          npm install yo
          npm install 
      displayName: 'npm install'
      
    - script: |
          npm run lint 
      displayName: 'npm lint'

    - task: Npm@1
      displayName: "npm Packaging"
      inputs:
          command: 'custom'
          customCommand: 'pack'

    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'SBOM Generation Task'
      inputs:
        BuildDropPath: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '*.tgz'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/Package'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/Package'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: Npm@1
      displayName: "npm Test"
      inputs:
        command: 'custom'
        customCommand: 'test'

    - task: GitHubRelease@1
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
      inputs:
        gitHubConnection: 'github.com_marianan'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: '$(Build.SourceBranch)'
        releaseNotesSource: 'inline'
        assets: '$(Build.ArtifactStagingDirectory)/Package/*'
        isPreRelease: true
        addChangeLog: false

- job: UploadToStorage
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
#   pool:
#     name: Azure-IoT-EdgeExperience-1ES-Hosted-Windows
#     demands:
#       - ImageOverride -equals MMS2022TLS
  
  steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          if [[ $(Build.SourceBranch) =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "##vso[task.setvariable variable=NPM_PUBLISH_FLAG;]true"
          fi

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          VERSION=$(node -p -e "require('./package.json').version")
          echo "##vso[task.setvariable variable=PACKAGEVERSION;]$VERSION"

    - task: AzureKeyVault@2
      displayName: 'Azure Key Vault: azure-iot-edgetools-kv'
      inputs:
        azureSubscription: 'test'
        KeyVaultName: 'azure-iot-edgetools-kv'
        SecretsFilter: '*'
        RunAsPreJob: true
        
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          wget https://aka.ms/downloadazcopy-v10-linux
          tar -xvf downloadazcopy-v10-linux
          sudo cp ./azcopy_linux_amd64_*/azcopy /usr/bin/

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
           sudo azcopy cp /$(Build.ArtifactStagingDirectory)/Package/* /https://sadevicelabsetup.blob.core.windows.net/test/azureiotedge/npm/$(PACKAGEVERSION) /$(testaccess-key) /S

    # - task: Bash@3
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       azcopy /Source:$(Build.ArtifactStagingDirectory)/Package/* /Dest:https://azuresdkpartnerdrops.blob.core.windows.net/drops/azureiotedge/npm/$(PACKAGEVERSION) /DestKey:$(azuresdkpartnerdrops-access-key) /S

    # - task: AzureFileCopy@3
    #   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['NPM_PUBLISH_FLAG'], 'true'))
    #   inputs:
    #     SourcePath: '$(System.DefaultWorkingDirectory)/artifacts/*'
    #     azureSubscription: 'azuresdkpartnerdrops'
    #     Destination: 'AzureBlob'
    #     storage: 'azuresdkpartnerdrops'
    #     ContainerName: 'drops'
    #     BlobPrefix: 'azureiotedge/npm/$(PACKAGEVERSION)'