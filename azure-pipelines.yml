trigger:
  branches:
    include:
    - refs/tags/v*

pool:
  name: Azure-IoT-EdgeExperience-1ES-Hosted-Linux
  demands:
    - ImageOverride -equals MMSUbuntu18.04TLS

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
      checkLatest: true

  - script: |
        npm install yo
        npm install 
    displayName: 'npm install'
    
  - script: |
        npm run lint 
    displayName: 'npm lint'

  - task: Bash@3
    displayName: "npm Packging"
    inputs:
      targetType: 'inline'
      script: 'npm pack'

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'SBOM Generation Task'
    inputs:
      BuildDropPath: '$(Build.ArtifactStagingDirectory)'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '*.tgz'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Package'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/Package'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  - task: Npm@1
    displayName: "npm Test"
    inputs:
      command: 'custom'
      customCommand: 'test'
    
  - task: GitHubRelease@1
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: 'github.com_vikas0212git'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Build.SourceBranch)'
      releaseNotesSource: 'inline'
      assets: '$(Build.ArtifactStagingDirectory)/Package/*'
      addChangeLog: false

  - task: Npm@1
    displayName: "npm Publishing"
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      command: 'publish'
      publishRegistry: 'useFeed'
      publishFeed: '"Service connection name"'      