trigger:
  branches:
    include:
    - refs/tags/v*
    
jobs:
- job: Build
  pool:
    name: Azure-IoT-EdgeExperience-1ES-Hosted-Linux
    demands:
      - ImageOverride -equals MMSUbuntu18.04TLS

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
        checkLatest: true

    - script: |
          npm install yo
          npm install 
      displayName: 'npm install'
      
    - script: |
          npm run lint 
      displayName: 'npm lint'

    - task: Npm@1
      displayName: "npm Packaging"
      inputs:
          command: 'custom'
          customCommand: 'pack'

    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'SBOM Generation Task'
      inputs:
        BuildDropPath: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '*.tgz'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/Package'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/Package'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: Npm@1
      displayName: "npm Test"
      inputs:
        command: 'custom'
        customCommand: 'test'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          if [[ $(Build.SourceBranch) =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "##vso[task.setvariable variable=NPM_PUBLISH_FLAG;]true"
          fi

    - task: GitHubRelease@1
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['NPM_PUBLISH_FLAG'], 'true'))
      inputs:
        gitHubConnection: 'github.com_marianan'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: '$(Build.SourceBranch)'
        releaseNotesSource: 'inline'
        assets: '$(Build.ArtifactStagingDirectory)/Package/*'
        addChangeLog: false

- job: UploadToStorage
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  pool:
    name: Azure-IoT-EdgeExperience-1ES-Hosted-Windows
    demands:
      - ImageOverride -equals MMS2022TLS
  
  steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        if [[ $(Build.SourceBranch) =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "##vso[task.setvariable variable=NPM_PUBLISH_FLAG;]true"
        fi

  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      artifactName: 'drop'
      targetPath: '$(Build.ArtifactStagingDirectory)/Package'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        VERSION=$(node -p -e "require('./package.json').version")
        echo "##vso[task.setvariable variable=PACKAGEVERSION;]$VERSION"

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: echo $(PACKAGEVERSION)
 
  # - task: AzureFileCopy@3
  #   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['NPM_PUBLISH_FLAG'], 'true'))
  #   inputs:
  #     SourcePath: '$(System.DefaultWorkingDirectory)/artifacts/*'
  #     azureSubscription: 'azuresdkpartnerdrops'
  #     Destination: 'AzureBlob'
  #     storage: 'azuresdkpartnerdrops'
  #     ContainerName: 'drops'
  #     BlobPrefix: 'azureiotedge/npm/$(PACKAGEVERSION)'

  - task: AzureFileCopy@3
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['NPM_PUBLISH_FLAG'], 'true'))
    inputs:
      SourcePath: '$(Build.ArtifactStagingDirectory)/Package/*'
      azureSubscription: 'test'
      Destination: 'AzureBlob'
      storage: 'sadevicelabsetup'
      ContainerName: 'test'
      BlobPrefix: 'azureiotedge/npm/$(PACKAGEVERSION)'